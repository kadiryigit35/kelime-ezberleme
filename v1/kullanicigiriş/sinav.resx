<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnOku.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>